<template>
  <app-layout :showAlart="CreateModal = true">
    <template #header>

        <button class="float-right" @click="FormCreateModal = true" v-if="$page.props.permission.{{lowercasePlural}}.create" >
          <jet-button class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-semibold rounded-md shadow-sm text-rose-100 hover:text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900">Create</jet-button>
        </button>
    </template>
    <template #title >{{studlyPlural}} List</template>

    <jet-modal :maxWidth="'7xl'" :show="FormCreateModal" @close="false">

    <div class="py-12">
      <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
        <jet-form-section @submitted="{{studlySingular}}Submitted">
          <template #title v-if="!editMode">  Create {{studlySingular}} </template>
          <template #title v-else-if="editMode">  Edit {{studlySingular}} </template>

          <template #description> Membuat {{lowercaseSingular}}ingan. </template>

          <template #form>
            <!-- Name -->
            <div class="col-span-3 sm:col-span-3">
              <jet-label for="name" value="Name" />
              <jet-input
                id="name"
                type="text"
                class="mt-1 block w-full"
                v-model="form.name"
                autocomplete="name"
              />
              <jet-input-error :message="form.errors.name" class="mt-2" />
            </div>


           <!-- order_id -->
            <div class="col-span-3 sm:col-span-3">
              <jet-label for="order_id" value="Order" />
              <jet-input
                id="order_id"
                type="text"
                class="mt-1 block w-full"
                v-model="form.order_id"
                autocomplete="order_id"
              />
              <jet-input-error :message="form.errors.order_id" class="mt-2" />
            </div>

            <jet-media-manager
                :name="'media'"
                type="text"
                class="mt-1 block w-full"
                v-model="form.media"
                autocomplete="media"
                :error="form.errors.media"
            />

            <!-- active -->
            <div class="col-span-3 sm:col-span-3">
                <label class="flex items-center">
                    <jet-checkbox :value="form.active" v-model:checked="form.active"/>
                    <span class="ml-2 text-sm text-gray-600">Active </span>
                </label>
              <jet-input-error :message="form.errors.active" class="mt-2" />

            </div>



          </template>

          <template #actions>


            <jet-button
              :class="{ 'opacity-25': form.processing }"
              :disabled="form.processing"
            >
              Save
            </jet-button>

            <button class="float-right" @click="closeModal()"  >
              <jet-button class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-semibold rounded-md shadow-sm text-rose-100 hover:text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900">Cancel</jet-button>
            </button>

          </template>
        </jet-form-section>
      </div>
    </div>
    </jet-modal>

    <div class="p-8 mx-auto max-w-7xl">
      <section class="flex flex-col p-4 mb-4 space-y-4 bg-white shadow sm:rounded lg:flex-row lg:items-center lg:justify-between lg:space-y-0 lg:p-2">
        <div class="flex flex-col space-y-4 sm:flex-row sm:space-y-0 sm:space-x-2">
          <select v-model="query.{{lowercaseSingular}}Order" aria-label="Order Id" id="order_id" class="pr-10 pl-3 w-full h-11 rounded border-gray-300 shadow-sm lg:h-9 lg:text-sm sm:w-44 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
            <option v-for="order in all{{studlySingular}}Orders" :value="order.value">{{ order.label }}</option>
          </select>

          <!-- <select v-model="query.month" aria-label="Media date" id="date" class="pr-10 pl-3 w-full h-11 rounded border-gray-300 shadow-sm lg:h-9 lg:text-sm sm:w-44 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
            <option v-for="month in allMonths" :value="month.value">{{ month.label }}</option>
          </select> -->

          <button @click="filter()" type="button" class="inline-flex items-center px-4 h-11 font-medium text-gray-700 bg-white rounded border border-gray-300 shadow-sm lg:h-9 lg:text-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            Filter
          </button>
        </div>

        <div class="flex flex-col">
          <label for="search" class="text-sm font-medium text-gray-700 sr-only">Search</label>
          <input v-model="query.term" @keydown.enter="filter()" type="search" id="search" class="w-full h-11 rounded border-gray-300 shadow-sm lg:h-9 lg:text-sm lg:w-64 focus:ring-blue-500 focus:border-blue-500" placeholder="Search for..." autocomplete="off"/>
        </div>
      </section>

      <section class="flex flex-col items-center space-y-4 mb-4 md:space-y-0 md:flex-row md:justify-between">
        <select-action :actions="actions" @execute="executeAction"></select-action>

        <pagination :pagination="{{lowercasePlural}}.meta"></pagination>
      </section>

      <section class="mb-4">
        <table class="min-w-full bg-white shadow table-fixed sm:rounded">
          <thead>
          <tr class="border-b border-gray-200">
            <th class="px-2 w-10 text-center">
              <input type="checkbox" @change="toggleSelectAll" class="w-6 h-6 text-blue-600 rounded border-gray-300 lg:w-4 lg:h-4 focus:ring-blue-500">
            </th>
            <th class="text-left w-48">
              <inertia-link
                  href="#"
                  class="flex relative z-10 items-center p-2 space-x-2 font-normal text-blue-600 group lg:text-sm focus:outline-none focus:ring-2 focus:ring-opacity-50 focus:ring-blue-500">
                Name
              </inertia-link>
            </th>
            <th class="hidden w-48 text-left lg:table-cell">
              <span class="inline-block p-2 font-normal text-blue-600 lg:text-sm">Slug</span>
            </th>
            <th class="hidden w-48 text-left lg:table-cell">
              <span class="inline-block p-2 font-normal text-blue-600 lg:text-sm">Order</span>
            </th>
            <th class="hidden w-48 text-left lg:table-cell">
              <span class="inline-block p-2 font-normal text-blue-600 lg:text-sm">Active</span>
            </th>
            <!-- <th class="hidden w-28 text-left lg:table-cell">
              <inertia-link
                  href="#"
                  class="flex relative z-10 items-center p-2 space-x-2 font-normal text-blue-600 group lg:text-sm focus:outline-none focus:ring-2 focus:ring-opacity-50 focus:ring-blue-500">
                Date
              </inertia-link>
            </th> -->
          </tr>
          </thead>

          <tbody class="divide-y divide-gray-100">
          <tr class="align-top group" v-for="({{lowercaseSingular}}, index) in {{lowercasePlural}}.data" :key="{{lowercaseSingular}}.id">
            <td class="p-2 w-10 text-center">
              <input type="checkbox" v-model="{{lowercaseSingular}}.selected" class="w-6 h-6 text-blue-600 rounded border-gray-300 lg:w-4 lg:h-4 focus:ring-blue-500">
            </td>
            <td class="p-2 text-left">
              <div class="flex space-x-4">
                <div class="overflow-hidden flex-shrink-0 w-12 h-12 bg-gray-100 rounded-md lg:w-16 lg:h-16">
                    <img :src="{{lowercaseSingular}}.media_url" class="object-cover">
                </div>
                <div>
                  <inertia-link href="#" class="text-sm font-semibold text-blue-600 break-all rounded focus:outline-none focus:ring-2 focus:ring-blue-500">
                    {{ {{lowercaseSingular}}.name }}
                  </inertia-link>


                  <div class="flex items-center mt-2 space-x-2  group-hover:visible">
                    <button @click="edit{{studlySingular}}({{lowercaseSingular}})" v-if="{{lowercaseSingular}}.can.update" class="text-xs text-blue-600 rounded hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
                      Edit
                    </button>

                    <span class="text-xs text-gray-300">|</span>
                    <button @click="delete{{studlySingular}}({{lowercaseSingular}}.id)" class="text-xs text-red-600 rounded hover:text-red-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
                      Delete
                    </button>
                    <span class="text-xs text-gray-300">|</span>
                    <a :href="{{lowercaseSingular}}.url" class="text-xs text-blue-600 rounded hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
                      View
                    </a>
                  </div>
                </div>
              </div>
            </td>
            <td class="hidden p-2 text-left lg:table-cell">
              <a href="#" class="text-blue-600 rounded lg:text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                {{ {{lowercaseSingular}}.slug }}
              </a>
            </td>
            <td class="hidden p-2 text-left lg:table-cell">
              <span class="text-gray-600 lg:text-sm">{{ {{lowercaseSingular}}.order_id }}</span>
            </td>
            <td class="hidden p-2 text-left lg:table-cell">
              <span class="text-gray-600 lg:text-sm">{{ {{lowercaseSingular}}.active }}</span>
            </td>
          </tr>

          <tr class="align-top" v-if="!{{lowercasePlural}}.data.length">
            <td colspan="4" class="p-2 text-sm text-gray-700">
              No {{lowercasePlural}} files found.
            </td>
          </tr>
          </tbody>
        </table>
      </section>

      <section class="flex flex-col items-center space-y-4 mb-4 md:space-y-0 md:flex-row md:justify-between">
        <select-action :actions="actions" @execute="executeAction"></select-action>

        <pagination :pagination="{{lowercasePlural}}.meta"></pagination>
      </section>
    </div>



  </app-layout>
</template>

<script>
import { ref , reactive, watchEffect } from "vue";
import { Link } from '@inertiajs/inertia-vue3'
// import { pickBy } from "lodash";
import { Inertia } from "@inertiajs/inertia";
import AppLayout from "@/Layouts/AppLayout";
import JetButton from "@/Jetstream/Button";
import JetInput from "@/Jetstream/Input";
import Pagination from "@/Components/Pagination";
import { XCircleIcon , EyeIcon , PencilAltIcon , ChevronDownIcon ,ArchiveIcon  ,DuplicateIcon } from '@heroicons/vue/solid'
import { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/vue'
// import Paginator from "@/Components/Paginator";
import JetDropdownList from "@/Jetstream/DropdownList";
import JetModal from "@/Jetstream/Modal";
import { useForm } from "@inertiajs/inertia-vue3";
import JetFormSection from "@/Jetstream/FormSection";
import JetInputError from "@/Jetstream/InputError";
import JetLabel from "@/Jetstream/Label";
import JetActionMessage from "@/Jetstream/ActionMessage";
import JetSecondaryButton from "@/Jetstream/SecondaryButton";
import JetSelect from "@/Components/Select";
import JetCheckbox from '@/Jetstream/Checkbox';
import JetMediaManager from "@/Components/MediaManager";

import SelectAction from '@/Components/SelectAction';
import {pickBy} from 'lodash';

export default {

  components: {
    AppLayout,
    JetButton,
    JetInput,
    Pagination,
    JetModal,
    XCircleIcon,
    PencilAltIcon,
    EyeIcon,
    ChevronDownIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    ArchiveIcon,
    DuplicateIcon,
    JetDropdownList,
    Link,
    SelectAction,
    JetFormSection,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSelect,
    JetCheckbox,
    JetMediaManager,
    // Paginator,
  },

  props: {
    {{lowercasePlural}}: Object,
    {{lowercaseSingular}}Orders: Array,
    {{lowercaseSingular}}_counts: Number,
    filters: Object
  },
  data(){
    return {
      actions: [
        {id: null, label: 'Bulk actions'},
        {id: 'delete', label: 'Delete'},
      ],

      query: {
        term: this.filters.term,
        {{lowercaseSingular}}Order: this.filters.{{lowercaseSingular}}Order,
      },
      show: ref(true),
      editMode: ref(false),
      FormCreateModal: ref(false),
      form: useForm({
        _method: "POST",
        name: "",
        order_id: "",
        slug: "",
        media: null,
        active: true,
      }),
    }
  },

  methods: {

    delete{{studlySingular}}({{studlySingular}}Id) {
      if (confirm(`Are you sure?`)) {
        this.$inertia.delete(route('{{lowercasePlural}}.delete'), {
          preserveState: false,
          data: {
            Ids: [{{studlySingular}}Id],
          },
        });
      }
    },
    toggleSelectAll(e) {
      this.{{lowercasePlural}}.data.forEach({{lowercasePlural}} => {{lowercasePlural}}.selected = e.target.checked);
    },
    {{studlySingular}}Submitted() {
      if(this.editMode){
        this.form.post(route("{{lowercasePlural}}.update", this.form.slug), {
          preserveScroll: true,
          onSuccess: () => this.closeModal(),
        });
      }else{
        this.form.post(route("{{lowercasePlural}}.store"),{
          onSuccess: () => this.closeModal(),
        });
      }
    },
    edit{{studlySingular}}({{lowercaseSingular}}) {
       this.form = useForm({
        _method: "PUT",
        name: {{lowercaseSingular}}.name,
        order_id: {{lowercaseSingular}}.order_id,
        slug: {{lowercaseSingular}}.slug,
        active: {{lowercaseSingular}}.active,
        media: {{lowercaseSingular}}.media,
      });
      this.editMode = ref(true),
      this.FormCreateModal = ref(true);

    },
    executeAction(actionId) {
      const {{lowercaseSingular}}Ids = this.{{lowercasePlural}}.data.filter({{lowercaseSingular}} => {{lowercaseSingular}}.selected)
          .map({{lowercaseSingular}} => {{lowercaseSingular}}.id);

      if (!{{lowercaseSingular}}Ids.length) return;

      switch (actionId) {
        case 'delete':
          if (confirm(`Are you sure?`)) {
            this.$inertia.delete(route('{{lowercasePlural}}.delete'), {
              preserveState: false,
              data: {
                Ids: {{lowercaseSingular}}Ids,
              },
            });
          }
          break;
      }
    },
    filter() {
      this.$inertia.get(route('{{lowercasePlural}}.index'), pickBy(this.query), {
        preserveState: true,
      });
    },
    closeModal: function () {
      this.FormCreateModal=ref(false);
      this.editMode=ref(false);
      this.form = useForm({
        _method: "POST",
        name: "",
        order_id: "",
        slug: "",
        active: true,
        media: null,
      });

    },
  },
  created() {
    setTimeout(() => {
      this.show =  ref(false)
    }, 5000);
  },
  computed: {
    all{{studlySingular}}Orders() {
      return [
        {value: null, label: 'Any Order'},
        ...this.{{lowercaseSingular}}Orders,
      ];
    },

  },
};
</script>
