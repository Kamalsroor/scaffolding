<?php

namespace App\Models;

use App\Http\Filters\Filterable;
use App\Http\Filters\{{studlySingular}}Filter;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use App\Models\Slug\HasSlug;
use App\Models\Slug\SlugOptions;
use App\Traits\HasCan;
use App\Models\Media\HasMedia;
use App\Models\Scope\OrderByScope;

class {{studlySingular}} extends Model
{
    use HasFactory;
    use Filterable;
    use SoftDeletes;
    use HasCan;
    use HasSlug;
    use HasMedia;
    use OrderByScope;



    /**
     * The Database Connection Name.
     *
     * @var string
     */
    protected $connection = 'tenant';



    /**
     * The relations to eager load on every query.
     *
     * @var array
     */
    protected $with = [
        'media',
    ];

    /**
     * The query parameter's filter of the model.
     *
     * @var string
     */
    protected $filter = {{studlySingular}}Filter::class;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name',
        'slug',
        'order_id',
        'active',
    ];


    /**
     *
     * The accessors to append to the model's array form.
     *
     * @var array
     */
    protected $appends = [
        'can',
    ];

    protected $casts = [
        'active' => 'boolean'
    ];

    /**
     * Get the options for generating the slug.
     */
    public function getSlugOptions() : SlugOptions
    {
        return SlugOptions::create()
            ->generateSlugsFrom('name')
            ->saveSlugsTo('slug');
    }


    /**
     * Get the route key for the model.
     *
     * @return string
     */
    public function getRouteKeyName()
    {
        return 'slug';
    }

}

